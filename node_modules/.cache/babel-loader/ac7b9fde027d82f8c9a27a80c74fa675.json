{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n */\n'use strict';\n\nvar _slicedToArray = require(\"C:/Users/Usuario/Documents/chatbot_fisica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _require = require('./config'),\n    DEFAULT_API_VERSION = _require.DEFAULT_API_VERSION,\n    DEFAULT_WIT_URL = _require.DEFAULT_WIT_URL;\n\nvar fetch = require('isomorphic-fetch');\n\nvar log = require('./log');\n\nvar Url = require('url');\n\nvar HttpsProxyAgent = require('https-proxy-agent');\n\nvar learnMore = 'Learn more at https://wit.ai/docs/quickstart';\n\nfunction getProxyAgent(witURL) {\n  var url = Url.parse(witURL);\n  var proxy = url.protocol === \"http:\" ? process.env.http_proxy || process.env.HTTP_PROXY : process.env.https_proxy || process.env.HTTPS_PROXY;\n  var noProxy = process.env.no_proxy || process.env.NO_PROXY;\n  var shouldIgnore = noProxy && noProxy.indexOf(url.hostname) > -1;\n\n  if (proxy && !shouldIgnore) {\n    return new HttpsProxyAgent(proxy);\n  }\n\n  if (!proxy) return null;\n}\n\nfunction Wit(opts) {\n  if (!(this instanceof Wit)) {\n    return new Wit(opts);\n  }\n\n  var _this$config = this.config = Object.freeze(validate(opts)),\n      accessToken = _this$config.accessToken,\n      apiVersion = _this$config.apiVersion,\n      headers = _this$config.headers,\n      logger = _this$config.logger,\n      witURL = _this$config.witURL,\n      proxy = _this$config.proxy;\n\n  this._sessions = {};\n\n  this.message = function (message, context, n, verbose, junk) {\n    var qs = 'q=' + encodeURIComponent(message);\n\n    if (context) {\n      qs += '&context=' + encodeURIComponent(JSON.stringify(context));\n    }\n\n    if (typeof n === 'number') {\n      qs += '&n=' + encodeURIComponent(JSON.stringify(n));\n    }\n\n    if (verbose != null) {\n      qs += '&verbose=' + encodeURIComponent(JSON.stringify(verbose));\n    }\n\n    if (junk != null) {\n      qs += '&junk=true';\n    }\n\n    var method = 'GET';\n    var fullURL = witURL + '/message?' + qs;\n    var handler = makeWitResponseHandler(logger, 'message');\n    logger.debug(method, fullURL);\n    return fetch(fullURL, {\n      method: method,\n      headers: headers,\n      proxy: proxy\n    }).then(function (response) {\n      return Promise.all([response.json(), response.status]);\n    }).then(handler);\n  };\n}\n\nvar makeWitResponseHandler = function makeWitResponseHandler(logger, endpoint) {\n  return function (rsp) {\n    var error = function error(err) {\n      logger.error('[' + endpoint + '] Error: ' + err);\n      throw err;\n    };\n\n    if (rsp instanceof Error) {\n      return error(rsp);\n    }\n\n    var _rsp = _slicedToArray(rsp, 2),\n        json = _rsp[0],\n        status = _rsp[1];\n\n    if (json instanceof Error) {\n      return error(json);\n    }\n\n    var err = json.error || status !== 200 && json.body + ' (' + status + ')';\n\n    if (err) {\n      return error(err);\n    }\n\n    logger.debug('[' + endpoint + '] Response: ' + JSON.stringify(json));\n    return json;\n  };\n};\n\nvar validate = function validate(opts) {\n  if (!opts.accessToken) {\n    throw new Error('Could not find access token, learn more at https://wit.ai/docs');\n  }\n\n  opts.witURL = opts.witURL || DEFAULT_WIT_URL;\n  opts.apiVersion = opts.apiVersion || DEFAULT_API_VERSION;\n  opts.headers = opts.headers || {\n    'Authorization': 'Bearer ' + opts.accessToken,\n    'Accept': 'application/vnd.wit.' + opts.apiVersion + '+json',\n    'Content-Type': 'application/json'\n  };\n  opts.logger = opts.logger || new log.Logger(log.INFO);\n  opts.proxy = getProxyAgent(opts.witURL);\n  return opts;\n};\n\nmodule.exports = Wit;","map":{"version":3,"sources":["C:/Users/Usuario/Documents/chatbot_fisica/node_modules/node-wit/lib/wit.js"],"names":["require","DEFAULT_API_VERSION","DEFAULT_WIT_URL","fetch","log","Url","HttpsProxyAgent","learnMore","getProxyAgent","witURL","url","parse","proxy","protocol","process","env","http_proxy","HTTP_PROXY","https_proxy","HTTPS_PROXY","noProxy","no_proxy","NO_PROXY","shouldIgnore","indexOf","hostname","Wit","opts","config","Object","freeze","validate","accessToken","apiVersion","headers","logger","_sessions","message","context","n","verbose","junk","qs","encodeURIComponent","JSON","stringify","method","fullURL","handler","makeWitResponseHandler","debug","then","response","Promise","all","json","status","endpoint","rsp","error","err","Error","body","Logger","INFO","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n */\n\n'use strict';\n\nconst {\n  DEFAULT_API_VERSION,\n  DEFAULT_WIT_URL\n} = require('./config');\nconst fetch = require('isomorphic-fetch');\nconst log = require('./log');\nconst Url = require('url');\nconst HttpsProxyAgent = require('https-proxy-agent');\n\nconst learnMore = 'Learn more at https://wit.ai/docs/quickstart';\n\nfunction getProxyAgent(witURL) {\n  const url = Url.parse(witURL);\n  const proxy = url.protocol === \"http:\" ?\n      process.env.http_proxy || process.env.HTTP_PROXY :\n      process.env.https_proxy || process.env.HTTPS_PROXY;\n  const noProxy = process.env.no_proxy || process.env.NO_PROXY;\n\n  const shouldIgnore = noProxy && noProxy.indexOf(url.hostname) > -1;\n  if (proxy && !shouldIgnore) {\n    return new HttpsProxyAgent(proxy);\n  }\n  if(!proxy) return null;\n}\n\nfunction Wit(opts) {\n  if (!(this instanceof Wit)) {\n    return new Wit(opts);\n  }\n\n  const {\n    accessToken, apiVersion, headers, logger, witURL, proxy\n  } = this.config = Object.freeze(validate(opts));\n\n  this._sessions = {};\n\n  this.message = (message, context, n, verbose, junk) => {\n    let qs = 'q=' + encodeURIComponent(message);\n    if (context) {\n      qs += '&context=' + encodeURIComponent(JSON.stringify(context));\n    }\n    if (typeof n === 'number') {\n      qs += '&n=' + encodeURIComponent(JSON.stringify(n));\n    }\n    if (verbose != null) {\n      qs += '&verbose=' + encodeURIComponent(JSON.stringify(verbose));\n    }\n    if (junk != null) {\n      qs += '&junk=true';\n    }\n    const method = 'GET';\n    const fullURL = witURL + '/message?' + qs;\n    const handler = makeWitResponseHandler(logger, 'message');\n    logger.debug(method, fullURL);\n    return fetch(fullURL, {\n      method,\n      headers,\n      proxy,\n    })\n        .then(response => Promise.all([response.json(), response.status]))\n        .then(handler)\n        ;\n  };\n}\n\nconst makeWitResponseHandler = (logger, endpoint) => {\n  return rsp => {\n    const error = err => {\n      logger.error('[' + endpoint + '] Error: ' + err);\n      throw err;\n    };\n\n    if (rsp instanceof Error) {\n      return error(rsp);\n    }\n\n    const [json, status] = rsp;\n\n    if (json instanceof Error) {\n      return error(json);\n    }\n\n    const err = json.error || status !== 200 && json.body + ' (' + status + ')';\n\n    if (err) {\n      return error(err);\n    }\n\n    logger.debug('[' + endpoint + '] Response: ' + JSON.stringify(json));\n    return json;\n  }\n};\n\nconst validate = (opts) => {\n  if (!opts.accessToken) {\n    throw new Error('Could not find access token, learn more at https://wit.ai/docs');\n  }\n  opts.witURL = opts.witURL || DEFAULT_WIT_URL;\n  opts.apiVersion = opts.apiVersion || DEFAULT_API_VERSION;\n  opts.headers = opts.headers || {\n    'Authorization': 'Bearer ' + opts.accessToken,\n    'Accept': 'application/vnd.wit.' + opts.apiVersion + '+json',\n    'Content-Type': 'application/json',\n  };\n  opts.logger = opts.logger || new log.Logger(log.INFO);\n  opts.proxy = getProxyAgent(opts.witURL);\n\n  return opts;\n};\n\nmodule.exports = Wit;\n"]},"metadata":{},"sourceType":"script"}